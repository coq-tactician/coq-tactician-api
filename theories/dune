(coq.theory
 (name Tactician)
 (package coq-tactician-reinforce)
 (flags -q -noinit)
 (modules )
 (libraries
   coq-tactician-reinforce.plugin
))

(include_subdirs qualified)

(rule
 (targets TacticianReinforceDepLoader.v injection-flags-dirs)
 (deps   plugin_deps_generate_conf.ml ../src/dune )
 (action (run ocaml -I %{lib:findlib:} str.cma findlib.cma
              %{deps} %{targets})))

(rule
 (target injection-flags)
 (deps injection-flags-dirs injection-flags-loader)
 (action (with-stdout-to %{target}
           (run cat injection-flags-dirs injection-flags-loader))))

(install
 (package coq-tactician-reinforce)
 (files (NNLearner.v as coq/user-contrib/Tactician/NNLearner.v)
        (TacticianReinforceDepLoader.v as coq/user-contrib/Tactician/TacticianReinforceDepLoader.v))
 (section lib_root)
)

(install
(package coq-tactician-reinforce)
(section (site (coq-tactician plugins)))
(files (injection-flags as coq-tactician-reinforce/injection-flags)))
